<icegrid>
  <!-- An application describes nodes and servers deployed on these nodes. An IceGrid deployment (a registry plus one or
  more nodes) can host several applications. -->
  <application name="GreeterHall">

    <!-- A server template allows us to instantiate several similar servers. -->
    <server-template id="GreetServer">
      <!-- This template has a single parameter, index. Its value can be any string. -->
      <parameter name="index"/>

      <!-- An instance of this template is a server with ID GreetServer-${index}. IceGrid starts this server when a
      client looks up an object adapter or a well-known object in this server or in a replica group it references. -->
      <server id="GreetServer-${index}" exe="dotnet" activation="on-demand">
        <option>Server/bin/Debug/net8.0/Server.dll</option>

        <!-- The object adapter created by this server. It listens on an OS-assigned tcp port, on all interfaces.
        It also belongs to replica group GreeterPool, defined later. -->
        <adapter name="GreeterAdapter" endpoints="tcp" replica-group="GreeterPool"/>

        <!-- Generates an additional property in the server config file. -->
        <property name="Greeter.Identity" value="greeter"/>
      </server>
    </server-template>

    <!-- Represents a set of replicated object adapters. -->
    <replica-group id="GreeterPool">
      <!-- Specifies in which order IceGrid returns the object adapters in the pool.-->
      <load-balancing type="round-robin"/>

      <!-- Defines the well-known object "greeter", implemented by all replicas. -->
      <object identity="greeter"/>
    </replica-group>

    <!-- Describes the servers deployed on node1. Here, we deploy 3 separate instances of the GreetServer. -->
    <node name="node1">
      <server-instance template="GreetServer" index="1"/>
      <server-instance template="GreetServer" index="2"/>
      <server-instance template="GreetServer" index="3"/>
    </node>
  </application>
</icegrid>
