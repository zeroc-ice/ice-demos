// Copyright (c) ZeroC, Inc.

using EarlyRiser;

namespace Server;

/// <summary>BidirWakeUpService is an Ice servant that implements Slice interface WakeUpService.</summary>
internal class BidirWakeUpService : WakeUpServiceDisp_
{
    /// <inheritdoc/>
    // Implements the abstract method WakeMeUp from the WakeUpServiceDisp_ class generated by the Slice compiler.
    public override void WakeMeUp(long timeStamp, Ice.Current current)
    {
        var timeStampDateTime = new DateTime(timeStamp, DateTimeKind.Utc);
        Console.WriteLine($"Dispatching wakeMeUp request {{ timeStamp = '{timeStampDateTime.ToLocalTime()}' }}");

        Ice.Connection? connection = current.con; // The connection from the client to the server.
        if (connection is null)
        {
            // Should never happen, but in case it does, the Ice runtime transmits this exception as an
            // Ice.UnknownException.
            throw new NotImplementedException("BidirWakeUpService does not support collocated calls");
        }

        // Create a proxy to the client's alarm clock. This connection-bound proxy is called a "fixed proxy".
        AlarmClockPrx alarmClock = AlarmClockPrxHelper.uncheckedCast(
            connection.createProxy(new Ice.Identity { name = "alarmClock" }));

        // Start a background task to ring the alarm clock.
        _ = Task.Run(async () =>
        {
            // Wait until the specified time.
            TimeSpan delay = timeStampDateTime - DateTime.UtcNow;
            if (delay > TimeSpan.Zero)
            {
                await Task.Delay(delay);
            }

            // First ring. This invocation reuses the connection established by the client.
            ButtonPressed buttonPressed = await alarmClock.RingAsync("It's time to wake up!");

            // Keep ringing every 10 seconds until the user presses the stop button.
            while (buttonPressed is ButtonPressed.Snooze)
            {
                await Task.Delay(TimeSpan.FromSeconds(10));
                buttonPressed = await alarmClock.RingAsync("No more snoozing!");
            }
            Console.WriteLine("Client pressed Stop on alarm clock.");
        });
    }
}
