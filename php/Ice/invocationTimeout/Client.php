<?php
// Copyright (c) ZeroC, Inc.

require_once 'Ice.php';
require_once 'Greeter.php';

// Create an Ice communicator. We'll use this communicator to create proxies and manage outgoing connections.
// This communicator is destroyed automatically at the end of the script.
$communicator = Ice\initialize($argv);

// GreeterPrxHelper is a class generated by the Slice compiler. We create a Greeter proxy from a communicator and a
// "stringified proxy" with the address of the target object.
// If you run the server on a different computer, replace localhost in the string below with the server's hostname
// or IP address.
$greeter = VisitorCenter\GreeterPrxHelper::createProxy($communicator, 'greeter:tcp -h localhost -p 4061');

// Create a proxy to the slow greeter with an invocation timeout of 4 seconds (the default invocation timeout is
// infinite).
$slowGreeter = VisitorCenter\GreeterPrxHelper::createProxy(
    $communicator,
    "slowGreeter:tcp -h localhost -p 4061")->ice_invocationTimeout(4000);

# Send a request to the regular greeter and get the response.
$greeting = $greeter->greet(get_current_user());
echo $greeting . "\n";

# Send a request to the slow greeter with the 4-second invocation timeout.
try {
    $greeting = $slowGreeter->greet("alice");
    echo "Received unexpected greeting: $greeting\n";
} catch (Ice\InvocationTimeoutException $exception) {
    echo "Caught InvocationTimeoutException, as expected: $exception->getMessage()\n";
}

# Verify the regular greeter still works.
$greeting = $greeter->greet("carol");
echo $greeting . "\n";
