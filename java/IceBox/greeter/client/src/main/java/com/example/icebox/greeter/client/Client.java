// Copyright (c) ZeroC, Inc.

package com.example.icebox.greeter.client;

import com.example.visitorcenter.GreeterPrx;
import com.zeroc.Ice.Communicator;
import com.zeroc.Ice.Util;

import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;

class Client {
    public static void main(String[] args) {
        // Create an Ice communicator. We'll use this communicator to create proxies and manage outgoing connections.
        try (Communicator communicator = Util.initialize(args)) {
            // GreeterPrx is a class generated by the Slice compiler. We create a proxy from a communicator and a
            // "stringified proxy" with the address of the target object.
            // If you run the server on a different computer, replace localhost in the string below with the server's
            // hostname or IP address.
            var greeter = GreeterPrx.createProxy(communicator, "greeter:tcp -h localhost -p 4061");

            // Send a request to the remote object and get the response.
            String greeting = greeter.greet(System.getProperty("user.name"));
            System.out.println(greeting);
        }
    }
}
