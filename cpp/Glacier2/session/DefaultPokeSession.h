// Copyright (c) ZeroC, Inc.

#ifndef DEFAULT_POKE_SESSION_H
#define DEFAULT_POKE_SESSION_H

#include "PokeBox.h"

namespace Server
{
    /// DefaultPokeSession is an Ice servant that implements Slice interface PokeSession.
    class DefaultPokeSession : public CatchThemAll::PokeSession
    {
    public:
        // Implements the pure virtual function in the base class (CatchThemAll::PokeSession) generated by the Slice
        // compiler.
        std::optional<CatchThemAll::PokeBoxPrx> getPokeBox(const Ice::Current&) override;

    private:
        // The object adapter that hosts this servant and the PokeBox objects.
        Ice::ObjectAdapterPtr _adapter;

        // A proxy to the SessionControl object hosted by the Glacier2 router; this proxy allows us to control the Glacier2
        // session, in particular to destroy it.
        // In this demo, that's the only per-session state maintained by DefaultPokeSession.
        Glacier2::SessionControlPrx _sessionControl;

        IUserIdResolver _userIdResolver;
    };
}

#endif
