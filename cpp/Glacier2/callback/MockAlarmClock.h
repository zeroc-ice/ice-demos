// Copyright (c) ZeroC, Inc.

#ifndef MOCK_ALARM_CLOCK_H
#define MOCK_ALARM_CLOCK_H

#include "AlarmClock.h"

#include <future>

namespace Client
{
    /// MockAlarmClock is an Ice servant that implements Slice interface AlarmClock.
    class MockAlarmClock : public EarlyRiser::AlarmClock
    {
    public:
        // Implements the pure virtual function in the base class (AlarmClock) generated by the Slice compiler.
        EarlyRiser::ButtonPressed ring(std::string message, const Ice::Current&) override;

        /// Waits until ring returns ButtonPressed::Stop. Can only be called once.
        void wait();

    private:
        bool _needMoreTime{true};
        std::promise<void> _stopPromise;
    };
}

#endif
