# Copyright (c) ZeroC, Inc.

from datetime import datetime, timedelta

import Ice

# Slice module VisitorCenter in Greeter.ice maps to Python module VisitorCenter.
import VisitorCenter

MAX_LENGTH = 7


class Chatbot(VisitorCenter.Greeter):
    """
    Chatbot is an Ice servant that implements Slice interface Greeter.
    """

    # Implements the method greet from the Greeter class generated by the Slice compiler.
    def greet(self, name: str, current: Ice.Current) -> str:
        print(f"Dispatching greet request {{ name = '{name}' }}")

        if len(name) > MAX_LENGTH:
            raise VisitorCenter.GreeterException("Name is longer than maximum!", VisitorCenter.GreeterError.NameTooLong)

        match name:
            case "":
                # ObjectNotExistException is a dispatch exception with a reply status of 'ObjectNotExist'.
                raise Ice.ObjectNotExistException()

            case "alice":
                # Simulate an authentication error by throwing a dispatch exception with the Unauthorized error code.
                # Note: This is a demo; no real authentication logic is implemented.
                raise Ice.DispatchException(
                    Ice.ReplyStatus.Unauthorized.value, "Invalid credentials. The administrator has been notified."
                )
            case "bob":
                raise VisitorCenter.GreeterException(
                    f"Away until {(datetime.now() + timedelta(minutes=5)).strftime('%Y-%m-%d %H:%M:%S')}.",
                    VisitorCenter.GreeterError.Away,
                )
            case "carol":
                raise VisitorCenter.GreeterException(
                    "I am already greeting someone else.", VisitorCenter.GreeterError.GreetingOtherVisitor
                )

            case _:
                return f"Hello, {name}!"
