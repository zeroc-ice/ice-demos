#!/usr/bin/env ruby
# Copyright (c) ZeroC, Inc.

require 'Ice'

# Load the code generated by the Slice compiler. The Slice module ClearSky maps to a Ruby module with the same name.
require_relative 'WeatherStation.rb'

# Create an Ice communicator. We'll use this communicator to create proxies and manage outgoing connections.
Ice::initialize(ARGV) do |communicator|
    # Create a proxy to the weather station.
    weatherStation = ClearSky::WeatherStationPrx.new(communicator, "weatherStation:tcp -h localhost -p 4061")

    # Generate random temperature, humidity, and pressure values.
    temperature = (190.0 + rand(40)) / 10.0   # Temperature in degrees Celsius (19.0 to 23.0).
    humidity = (450.0 + rand(100)) / 10.0     # Humidity in percentage (45.0 to 55.0).
    pressure = (10000.0 + rand(500)) / 10.0   # Pressure in millibars (1,000 to 1,050).

    # Create an AtmosphericConditions object with random values, including the optional pressure.
    reading = ClearSky::AtmosphericConditions.new(temperature, humidity, pressure)

    # Report this reading to the weather station.
    weatherStation.report("sensor v2", reading)

    puts "sensor v2: sent reading to weather station"
end
