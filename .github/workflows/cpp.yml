name: C++

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]

jobs:
  clang-format:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Clang Format
        run: |
          # This LLVM script will add the relevant LLVM PPA: https://apt.llvm.org/
          wget https://apt.llvm.org/llvm.sh -O /tmp/llvm.sh
          chmod +x /tmp/llvm.sh
          sudo /tmp/llvm.sh 19
          sudo apt-get install -y clang-format-19
          rm /tmp/llvm.sh
          clang-format-19 --version

      - name: Run Clang Format
        run: |
          set -o pipefail
          find . -name "*.h" -o -name "*.cpp" | xargs clang-format-19 --style=file --fallback-style=none --Werror --dry-run

  clang-tidy:
    runs-on: ubuntu-24.04
    steps:
      - name: Install clang-tidy
        run: |
          # This LLVM script will add the relevant LLVM PPA: https://apt.llvm.org/
          wget https://apt.llvm.org/llvm.sh -O /tmp/llvm.sh
          chmod +x /tmp/llvm.sh
          sudo /tmp/llvm.sh 19
          sudo apt-get install -y clang-tidy-19
          rm /tmp/llvm.sh
          clang-tidy-19 --version

      - name: Checkout Ice
        uses: actions/checkout@v4
        with:
          repository: zeroc-ice/ice
          ref: main
          path: ice

      - name: Setup Ice Build Dependencies
        uses: ./ice/.github/actions/setup-dependencies

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ice-demos

      - name: Install Nightly Ice Builds
        uses: ./ice-demos/.github/actions/install-nightly-ice

      - name: Build C++ Demos
        timeout-minutes: 30
        working-directory: ice-demos/cpp
        run: |
          set -o pipefail
          find . -name CMakeLists.txt -type f | while IFS= read -r file; do
            dir=$(dirname "$file");
            cmake -B "$dir/build" -S "$dir" -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
            cmake --build "$dir/build" --config Release
          done

      - name: Run Clang Tidy
        working-directory: ice-demos/cpp
        run: |
          set -o pipefail
          find . -name compile_commands.json -type f | while IFS= read -r file; do
            dir=$(dirname "$file");
            run-clang-tidy-19 -p "$dir" -j$(nproc) -quiet
          done
